services:
  # Bot API service
  bot-api:
    environment:
      TELEGRAM_WEB_APP_URL: https://salon.2gc.app/
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      DATABASE_URL: postgres://salon_user:salon_password@db:5432/manicure_salon?sslmode=disable
    restart: on-failure
    build:
      context: ./api
    ports:
      - "3001:3000" # API сервис на внутреннем порту 3000, проксируется на 3001 хоста для отладки (опционально)
    depends_on:
      - db

  # Bot UI in development mode
  bot-ui:
    restart: on-failure
    volumes:
      - ./ui/src:/app/src
      - ./ui/public:/app/public
      - ./ui/index.html:/app/index.html
      - ./ui/vite.config.js:/app/vite.config.js
    build:
      context: ./ui
      dockerfile: dev.dockerfile
    ports:
      - "3002:3000" # UI сервис на внутреннем порту 3000, проксируется на 3002 хоста для отладки (опционально)

  # Nginx proxy to forward request to UI and API
  dev-proxy:
    image: nginx:stable-alpine
    environment:
      PORT: 3000
      API_URL: http://bot-api:3000
      UI_URL: http://bot-ui:3000
    restart: on-failure
    volumes:
      - ./proxy.template:/etc/nginx/templates/default.conf.template
    ports:
      - "3000:3000" # Главный прокси-сервис доступен на порту 3000

  # PostgreSQL Database
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: salon_user
      POSTGRES_PASSWORD: salon_password
      POSTGRES_DB: manicure_salon
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
